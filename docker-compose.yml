services:
  db:
    image: postgres:latest
    container_name: seeonline-db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - monitoring

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - monitoring

  web:
    build: .
    container_name: seeonline-service
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: SeeOnline.settings
      PYTHONUNBUFFERED: 1
      REDIS_HOST: redis
      POSTGRES_HOST: db
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}"
    command: gunicorn --workers=4 --bind=0.0.0.0:8000 SeeOnline.wsgi:application
    volumes:
      - .:/app
      - ./logs:/app/logs  # Пробрасываем логи в локальную папку
    ports:
      - "8000:8000"
    networks:
      - monitoring

  celery:
    build: .
    container_name: celery-worker
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: SeeOnline.settings
      PYTHONUNBUFFERED: 1
      REDIS_HOST: redis
      POSTGRES_HOST: db
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}"
    command: celery -A SeeOnline worker --loglevel=error --logfile=logs/celery.log
    volumes:
      - .:/app
      - ./logs:/app/logs  # Пробрасываем логи в локальную папку
    networks:
      - monitoring

  celery-beat:
    build: .
    container_name: celery-beat
    restart: always
    depends_on:
      - redis
      - db
    env_file:
      - .env
    environment:
      DJANGO_SETTINGS_MODULE: SeeOnline.settings
      PYTHONUNBUFFERED: 1
      REDIS_HOST: redis
      POSTGRES_HOST: db
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}"
    command: celery -A SeeOnline beat --loglevel=error --logfile=logs/beat.log
    volumes:
      - .:/app
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    networks:
      - monitoring

volumes:
  postgres_data:
  grafana-storage:

networks:
  monitoring:
    driver: bridge
